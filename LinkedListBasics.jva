package LinkedLists.LinkedListMethods;

class Node{
  int data;
  Node next;
  Node(int d){
    data = d;
    next = null;
  }
}

class LinkedList{
  Node head;

  public void pushAtBegin(int data){
    Node newNode = new Node(data);
    newNode.next = head;
    head = newNode;
  }

  public void printList(){
    Node n = head;
    while(n != null){
      System.out.println(n.data + " ");
      n = n.next;
    }
    System.out.println("");
  }
  public void printMiddle(){
    Node firstNode = head;
    Node secondNode = head;
    if(head != null){
      while(secondNode != null && firstNode.next != null){
        firstNode = firstNode.next.next;
        secondNode = secondNode.next;
      }
      System.out.println(secondNode.data);
    }
  }

  public void deleteNode(int key){
    Node temp = head;
    Node prev = null;
    if(temp != null && temp.data == key){
      head = temp.next;
      return;
    }
    while(temp != null && temp.data == key){
      prev = temp;
      temp = temp.next;
    }
    if(temp == null ) {
      return ;
    }
    prev.next = temp.next;
  }

}

public class PrintLinkedListMiddle {

  public static void main(String args[]){

    System.out.println("Printing Linked List At Middle Element");

    LinkedList ll = new LinkedList();
    ll.pushAtBegin(10);
    ll.pushAtBegin(20);
    ll.pushAtBegin(30);
    ll.pushAtBegin(40);
    ll.pushAtBegin(50);
    ll.printList();
    System.out.println("===================");
    ll.printMiddle();
    System.out.println("===================");
    ll.deleteNode(50);
    ll.printList();
  }



}
